---
- name: Run Django init commands
  django_manage:
    command: "{{ item }}"
    app_path: "{{ django_checkout_path }}"
    virtualenv: "{{ django_venv_path }}"
  with_items: "{{ django_init_commands }}"
  become: true
  become_user: "{{ django_system_user }}"
  when:
    - django_init_commands is defined
    - django_init_commands is not none

- name: Make sure the static folder exists
  file:
    path: "{{ django_static_path }}"
    state: directory
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    mode: "0755"
  when:
    - django_static_path is defined
    - django_static_path is not none

- name: Make sure the mediafolder exists
  file:
    path: "{{ django_media_path }}"
    state: directory
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    mode: "{{ django_media_path_mode }}"
  when:
    - django_media_path is defined
    - django_media_path is not none

- name: Make the new codebase current
  file:
    src: "{{ django_checkout_path }}"
    dest: "{{ django_codebase_path }}"
    state: link
    force: true
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    follow: false
  become: true
  become_user: "{{ django_system_user }}"
  notify:
    - restart_service
    - restart_celery

- name: Copy uwsgi.ini
  template:
    src: uwsgi.ini.j2
    dest: "{{ django_checkout_path }}/uwsgi.ini"
    mode: "0644"
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
  notify:
    - restart_service

- name: customize logrotate rules
  template:
    src: etc/logrotate.d/django.j2
    dest: "/etc/logrotate.d/{{ django_service_name }}"
    owner: root
    group: root
    mode: "0644"
