# user
django_system_user: "django"
django_system_group: "www-data"
django_system_user_home: "/home/{{ django_system_user }}"

# git
django_git_url:
django_git_version: "master"
django_git_key_content:
django_git_key_ssh_file:
django_git_key_filename: "id_ed25519"
django_remove_git_key: true
django_copy_key_from_file: false
django_optional_git_packages:

# system-wide dependencies
django_python_source_version: "3.6"
django_python_version: "python3.6" # or python3.x
django_python_packages:
  - python3.6
  - python3.6-dev
  - python3-distutils
django_system_wide_dependencies:
  - build-essential
  - git

# service
django_service_name: "{{ django_system_user }}"
django_service_type: "notify"
django_service_restart: "on-failure"
django_service_group: "{{ django_system_group }}"
django_service_unit_after: "network.target"
django_service_install_wantedby: "multi-user.target"
django_pid_socks_dir: "/var/run/{{ django_service_name }}"
django_manage_services: false

django_env_name: "prod"
django_codebase_path: "{{ django_system_user_home }}/app"
django_versioned_path: "{{ django_codebase_path }}-versioned"
django_checkout_path: "{{ django_versioned_path }}/{{ ansible_date_time['epoch'] }}"
django_venv_path: "{{ django_system_user_home }}/.virtualenvs/{{ django_system_user }}"
django_log_path: "/var/log/{{ django_service_name }}"
django_pid_file: "{{ django_pid_socks_dir }}/{{ django_service_name }}.pid"
django_proxy_read_timeout: "300s"
django_environment_script_name: environment.sh
django_environment_vars: []
django_celeryd_extra_env_vars: []
django_celerybeat_extra_env_vars: []

# Python packages
django_apt_python_ppa:
django_recreate_virtual_env: false
django_setuptools_version:

## pipenv
django_use_pipenv: false

## dependency pip packages
## packages you'd want to install before install packages in the requirement's file
django_dependency_pip_packages: []

## pip
django_use_regular_old_pip: true
django_pip_paths:
  - "{{ django_checkout_path }}/requirements.txt"

## poetry
django_use_poetry: false

## other pip packages not in requirements files
django_pip_packages:
  - celery
  - uwsgi
django_pip_packages_extra_args:

# Django
django_local_settings_path:
django_init_commands:
  - migrate --noinput
  - collectstatic --noinput
django_static_path: "/var/www/static/"
django_media_path: "/var/www/media/"
django_media_path_mode: "0755"
django_settings_module:

# template settings path
django_settings_template_path: "../templates/local_settings.py.j2"

## Django settings
django_settings:
  BASE_DIR: "os.path.dirname(os.path.dirname(__file__))"
  SITE_ID: 1
  DATABASES: |
    {
      'default': {
          'ENGINE': 'django.db.backends.sqlite3',
          'NAME': 'sqlite3.db',
      }
    }
  STATICFILES_DIRS: |
    (
        os.path.join(BASE_DIR, "static"),
    )
  CACHES: |
    {
      'default': {
          'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
      }
    }
  STATIC_ROOT: "'{{ django_static_path }}'"
  STATIC_URL: "'/static/'"
  MEDIA_ROOT: "'{{ django_media_path }}'"
  MEDIA_URL: "'/media/'"
  EMAIL_BACKEND: "'django.core.mail.backends.console.EmailBackend'"
  EMAIL_HOST: "'localhost'"
  EMAIL_PORT: "1025"
  DEFAULT_FROM_EMAIL: "'Hello World <hello@example.com>'"
  ALLOWED_HOSTS: "[]"
  DEBUG: True  # yamllint disable-line rule:truthy
## python statements included at the top of settings file
django_top_python_statements:
  - import os
## python statements included at the bottom of settings file
django_bottom_python_statements:

# wsgi
django_wsgi_module:
django_wsgi_processes: 3
django_wsgi_harakiri: 240
django_wsgi_max_requests: 5000
django_wsgi_http:
django_wsgi_socket: "{{ django_pid_socks_dir }}/{{ django_service_name }}.sock"
django_wsgi_chmod_socket: 777
django_wsgi_user: "{{ django_system_user }}"
django_wsgi_group: "{{ django_system_group }}"
django_wsgi_vacuum: true
django_wsgi_master: true
django_wsgi_logto: "{{ django_log_path }}/uwsgi_{{ django_service_name }}.log"
django_wsgi_virtualenv: "{{ django_venv_path }}"
django_wsgi_static_map: "/static={{ django_static_path }}"
django_wsgi_buffer_size: 8192
django_wsgi_env: "HTTPS=on"
django_wsgi_stats: "{{ django_pid_socks_dir }}/{{ django_service_name }}_stats.sock"
django_wsgi_enable_threads: false
django_wsgi_memory_report: false

# celery
django_enable_celery: true
django_celery_app:
django_celeryd_nodes: "{{ django_service_name }}"
django_celeryd_service_name: "celeryd-{{ django_service_name }}"
django_celerybeat_service_name: "celerybeat-{{ django_service_name }}"
django_celeryd_opts: "--time-limit=300 --concurrency=8"
django_celeryd_log_level: "INFO"
django_celerybeat_log_level: "INFO"
django_celeryd_pid_directory: "/run/celery-{{ django_system_user }}"
django_celeryd_pid_file: "{{ django_celeryd_pid_directory }}/%n.pid"
django_celery_beat_pid_directory: "/var/run/{{ django_system_user }}"
django_celery_beat_pid_file: "{{ django_celery_beat_pid_directory }}/celerybeat.pid"

# Celery systemd service
django_celeryd_timeoutsec: 100
